diff --git a/internal/node/BUILD.bazel b/internal/node/BUILD.bazel
index f8b877fd..ee90cf51 100644
--- a/internal/node/BUILD.bazel
+++ b/internal/node/BUILD.bazel
@@ -18,6 +18,7 @@ load("@build_bazel_rules_nodejs//:index.bzl", "generated_file_test")
 package(default_visibility = ["//visibility:public"])

 exports_files([
+    "package.json",
     "node_patches.js",
     "require_patch.js",
     "loader.js",
diff --git a/internal/node/node.bzl b/internal/node/node.bzl
index da38b473..a8e7f6c9 100644
--- a/internal/node/node.bzl
+++ b/internal/node/node.bzl
@@ -250,6 +250,7 @@ fi

     node_tool_files = []
     node_tool_files.extend(node_toolchain.nodeinfo.tool_files)
+    node_tool_files.append(ctx.file._package_json)
     node_tool_files.append(ctx.file._link_modules_script)
     node_tool_files.append(ctx.file._runfile_helpers_bundle)
     node_tool_files.append(ctx.file._runfile_helpers_main)
@@ -579,6 +580,10 @@ Predefined genrule variables are not supported in this context.
         default = Label("//internal/coverage:lcov_merger-js.js"),
         allow_single_file = True,
     ),
+    "_package_json": attr.label(
+        default = Label("//internal/node:package.json"),
+        allow_single_file = True,
+    ),
     "_link_modules_script": attr.label(
         default = Label("//internal/linker:index.js"),
         allow_single_file = True,
diff --git a/internal/node/package.json b/internal/node/package.json
new file mode 100644
index 00000000..5bbefffb
--- /dev/null
+++ b/internal/node/package.json
@@ -0,0 +1,3 @@
+{
+  "type": "commonjs"
+}
diff --git a/internal/pkg_npm/BUILD.bazel b/internal/pkg_npm/BUILD.bazel
index 0c89f44e..d6277b0d 100644
--- a/internal/pkg_npm/BUILD.bazel
+++ b/internal/pkg_npm/BUILD.bazel
@@ -14,7 +14,7 @@ exports_files(["pkg_npm.bzl"])

 nodejs_binary(
     name = "packager",
-    data = ["//third_party/github.com/gjtorikian/isBinaryFile"],
+    data = ["//third_party/github.com/gjtorikian/isBinaryFile", "package.json"],
     entry_point = ":packager.js",
     # TODO: figure out why isbinaryfile is not linked in a way this can resolve
     templated_args = ["--bazel_patch_module_resolver"],
diff --git a/internal/pkg_npm/package.json b/internal/pkg_npm/package.json
new file mode 100644
index 00000000..5bbefffb
--- /dev/null
+++ b/internal/pkg_npm/package.json
@@ -0,0 +1,3 @@
+{
+  "type": "commonjs"
+}
