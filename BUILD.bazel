load("@build_bazel_rules_nodejs//:index.bzl", "pkg_npm")
load("@npm//@bazel/typescript:index.bzl", "ts_project")
load("//tools:jest.bzl", "jest_test")

#buildifier(
#    name = "buildifier",
#)

# Allow any ts_library rules in this workspace to reference the config
# See https://www.npmjs.com/package/@bazel/typescript#installation
exports_files(
    [
        "jest.config.cjs",
        "jest-setup.cjs",
        "tsconfig.json",
    ],
    visibility = ["//:__subpackages__"],
)

PACKAGE_NAMESPACE = "block65"

PACKAGE_NAME = "logger"

SAFE_PACKAGE_NAME = PACKAGE_NAME

SCOPED_PACKAGE_NAME = "@%s/%s" % (PACKAGE_NAMESPACE, PACKAGE_NAME)

SRCS = glob(
    ["lib/*.ts"],
    # exclude = ["__tests__/**/*"],
)

TEST_SRCS = glob(
    ["__tests__/**/*"],
    exclude = ["__tests__/__snapshots__/**/*"],
)

TEST_SNAPSHOT_SRCS = glob(
    ["__tests__/__snapshots__/**/*"],
)

DEPS = [
    "@npm//@types/node",
    "@npm//@types/express",
    "@npm//@types/cls-hooked",
    "@npm//pino",
    "@npm//cls-hooked",
    "@npm//colorette",
    "@npm//pino-pretty",
    "@npm//serialize-error",
]

TEST_DEPS = [
    "@npm//emittery",
]

ts_project(
    name = "compile",
    srcs = SRCS,
    declaration = True,
    deps = DEPS,
)

jest_test(
    name = "unit",
    srcs = SRCS + TEST_SRCS,
    snapshots = TEST_SNAPSHOT_SRCS,
    deps = DEPS + TEST_DEPS,
)

#tsc_test(
#    name = "typecheck_only",
#    args = ["$(execpath check_me.ts)"],
#    data = ["test.ts"],
#)

pkg_npm(
    name = SAFE_PACKAGE_NAME,
    package_name = SCOPED_PACKAGE_NAME,
    srcs = [
        "CREDITS",
        "LICENSE.md",
        "package.json",
    ],
    deps = [
        ":compile",
    ],
)
